--- smart-0.28/smart/ccache.c~	2004-12-06 20:50:02.000000000 +0100
+++ smart-0.28/smart/ccache.c	2004-12-18 04:31:53.201002760 +0100
@@ -1105,6 +1105,8 @@
 
     CacheObject *cache;
 
+    int found;
+
     if (!self->_cache) {
         PyErr_SetString(PyExc_TypeError, "Cache not set");
         return NULL;
@@ -1346,7 +1348,7 @@
     }
 
     /* found = False */
-    int found = 0;
+    found = 0;
     /* lst = cache._objmap.get(pkgargs) */
     lst = PyDict_GetItem(cache->_objmap, pkgargs);
     /* if lst is not None: */
@@ -1541,8 +1543,9 @@
     PyObject *state = PyDict_New();
     PyObject *self__stateversion__;
     PyMemberDef *members = Loader_Type.tp_members;
+    int i;
     if (!state) return NULL;
-    int i = 0;
+    i = 0;
     PyErr_Clear();
     while (members[i].name) {
         PyObject *obj = PyMember_GetOne((char *)self, &members[i]);
@@ -1567,6 +1570,7 @@
     PyMemberDef *members = Loader_Type.tp_members;
     PyObject *self__stateversion__;
     PyObject *__stateversion__;
+    PyObject *dict;
     if (!PyDict_Check(state)) {
         PyErr_SetString(StateVersionError, "");
         return NULL;
@@ -1581,7 +1585,7 @@
         return NULL;
     }
     Py_DECREF(self__stateversion__);
-    PyObject *dict = PyObject_GetAttrString((PyObject *)self, "__dict__");
+    dict = PyObject_GetAttrString((PyObject *)self, "__dict__");
     if (dict) {
         PyObject *keys = PyDict_Keys(state);
         int i, ilen;
@@ -1842,6 +1846,7 @@
     /* for loader in loaders: */
     ilen = PyList_GET_SIZE(self->_loaders);
     for (i = 0; i != ilen; i++) {
+        int j, jlen;
         LoaderObject *loader =
                         (LoaderObject *)PyList_GET_ITEM(self->_loaders, i);
         if (!PyObject_IsInstance((PyObject *)loader,
@@ -1852,7 +1857,6 @@
         }
 
         /* for pkg in loader._packages: */
-        int j, jlen;
         jlen = PyList_GET_SIZE(loader->_packages);
         for (j = 0; j != jlen; j++) {
             PackageObject *pkg = (PackageObject *)
